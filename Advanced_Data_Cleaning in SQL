-- Dataset
SELECT
	*
FROM
	PortfolioProjects.dbo.NashvilleHousing


-- SaleDate

SELECT
	SaleDate
FROM 
	PortfolioProjects.dbo.NashvilleHousing


-- Convert Sale Date

ALTER TABLE NashvilleHousing
ADD SaleDate2 date;

UPDATE PortfolioProjects.dbo.NashvilleHousing
SET SaleDate2 = CONVERT(date,SaleDate)

ALTER TABLE NashvilleHousing
DROP COLUMN SaleDate;


-- PropertyAddress

SELECT
	*
FROM
	PortfolioProjects.dbo.NashvilleHousing
WHERE
	PropertyAddress is null;

SELECT
	a.ParcelID,
	a.PropertyAddress,
	b.ParcelID,
	b.PropertyAddress
FROM
	PortfolioProjects.dbo.NashvilleHousing AS a
JOIN
	PortfolioProjects.dbo.NashvilleHousing AS b
	ON a.ParcelID = b.ParcelID AND
	a.[UniqueID ] <> b.[UniqueID ]
WHERE
	a.PropertyAddress is null


-- Updating Null PropertyAddress

SELECT
	a.ParcelID,
	a.PropertyAddress,
	b.ParcelID,
	b.PropertyAddress,
	ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM
	PortfolioProjects.dbo.NashvilleHousing AS a
JOIN
	PortfolioProjects.dbo.NashvilleHousing AS b
	ON a.ParcelID = b.ParcelID AND
	a.[UniqueID ] <> b.[UniqueID ]
WHERE
	a.PropertyAddress is null


UPDATE a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM
	PortfolioProjects.dbo.NashvilleHousing AS a
JOIN
	PortfolioProjects.dbo.NashvilleHousing AS b
	ON a.ParcelID = b.ParcelID AND
	a.[UniqueID ] <> b.[UniqueID ]
WHERE
	a.PropertyAddress is null


-- Breaking out address into individual columns (Address, City, State)


SELECT
	SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1) AS Address,
	SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress)+2, LEN(PropertyAddress)) AS Address
FROM
	PortfolioProjects.dbo.NashvilleHousing


ALTER TABLE PortfolioProjects.dbo.NashvilleHousing
ADD PropertySplitAddress Nvarchar(255);

UPDATE PortfolioProjects.dbo.NashvilleHousing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1)

ALTER TABLE PortfolioProjects.dbo.NashvilleHousing
ADD PropertySplitCity Nvarchar(255);

UPDATE PortfolioProjects.dbo.NashvilleHousing
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress)+2, LEN(PropertyAddress))



Select OwnerAddress from PortfolioProjects.dbo.NashvilleHousing

SELECT
	PARSENAME(REPLACE(OwnerAddress, ',','.'),3),
	PARSENAME(REPLACE(OwnerAddress, ',','.'),2),
	PARSENAME(REPLACE(OwnerAddress, ',','.'),1)
FROM PortfolioProjects.dbo.NashvilleHousing


ALTER TABLE PortfolioProjects.dbo.NashvilleHousing
ADD OwnerSplitAddress Nvarchar(255);

UPDATE PortfolioProjects.dbo.NashvilleHousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',','.'),3)

ALTER TABLE PortfolioProjects.dbo.NashvilleHousing
ADD OwnerSplitCity Nvarchar(255);

UPDATE PortfolioProjects.dbo.NashvilleHousing
SET OwnerSplitCity = TRIM(PARSENAME(REPLACE(OwnerAddress, ',','.'),2))

ALTER TABLE PortfolioProjects.dbo.NashvilleHousing
ADD OwnerSplitState Nvarchar(255);

UPDATE PortfolioProjects.dbo.NashvilleHousing
SET OwnerSplitState = TRIM(PARSENAME(REPLACE(OwnerAddress, ',','.'),1))


SELECT
	*
FROM PortfolioProjects.dbo.NashvilleHousing



-- Chante Y and N to Yes and No in 'Sold as Vacant' field

SELECT
	DISTINCT(SoldAsVacant), COUNT(SoldAsVacant)
FROM PortfolioProjects.dbo.NashvilleHousing
GROUP BY SoldAsVacant
ORDER BY 2


SELECT SoldAsVacant,
CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
	 WHEN SoldAsVacant = 'N' THEN 'No'
	 ELSE SoldAsVacant
	 END
FROM PortfolioProjects.dbo.NashvilleHousing

UPDATE PortfolioProjects.dbo.NashvilleHousing
SET SoldAsVacant = CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
	 WHEN SoldAsVacant = 'N' THEN 'No'
	 ELSE SoldAsVacant
	 END


-- Remove Duplicates

WITH RowNumCTE AS (
SELECT *,
	ROW_NUMBER() OVER (
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate2,
				 LegalReference
				 ORDER BY UniqueID) Row_Num

FROM PortfolioProjects.dbo.NashvilleHousing
--ORDER BY ParcelID
)
--SELECT *
DELETE
FROM RowNumCTE
WHERE Row_Num > 1
--ORDER BY PropertyAddress


--Delete Unused Columns


SELECT
	*
FROM PortfolioProjects.dbo.NashvilleHousing

ALTER TABLE PortfolioProjects.dbo.NashvilleHousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress
